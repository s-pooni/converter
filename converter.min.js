(function (jQuery) {
    console.log("Testing");
    jQuery.fn.initMeasurementConverter = function (params) {
        var options = jQuery.extend({}, params);
        console.log(options);

        if (!jQuery('#' + options.squareFeetElementId).length) {
            throw new Error('Unable to find element with ID mentioned in squareFeetElementId')
        }

        if (!jQuery('#' + options.boxesElementId).length) {
            throw new Error('Unable to find element with ID mentioned in boxesElementId')
        }


        if (isNaN(options.squarefeetPerBox) || options.squarefeetPerBox <= 0) {
            throw new Error('Property \'squarefeetPerBox\' should be a valid positive number')
        }


        jQuery('#' + options.squareFeetElementId).keyup(function () {
            var sf = jQuery(this).val();
            var bx = Math.ceil(sf / options.squarefeetPerBox);
            jQuery('#' + options.boxesElementId).val(bx)
            updateConvesionDescription(options.conversionDescriptionElementId, (bx * options.squarefeetPerBox).toFixed(2), bx)
        })

        jQuery('#' + options.boxesElementId).keyup(function () {
            var bx = jQuery(this).val();

            var sf = bx * options.squarefeetPerBox;

            jQuery('#' + options.squareFeetElementId).val(sf.toFixed(2))
            updateConvesionDescription(options.conversionDescriptionElementId, sf.toFixed(2), bx ? bx : 0)

        })
    }

    updateConvesionDescription = function (eleId, sf = 0, bx = 0) {
        if (bx == 0) {
            jQuery('#' + eleId).html('');
            return;
        }
        var bxText = 'box';
        if (bx > 1) {
            bxText = 'boxes'
        }
        jQuery('#' + eleId).html(bx + ' ' + bxText + ' will cover ' + sf + ' square feet of area')

    }
}(jQuery))
